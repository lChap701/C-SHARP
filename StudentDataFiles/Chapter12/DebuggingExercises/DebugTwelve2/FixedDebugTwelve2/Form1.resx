<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>